name: CI/CD Pipeline

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]

jobs:
  test:
    name: Tests & Quality Checks
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      
    - name: Build project
      run: npm run build
      
    - name: Check build size
      run: |
        echo "Build completed successfully!"
        echo "Checking dist folder..."
        ls -la dist/
        echo "Build size:"
        du -sh dist/
        
    - name: Comment PR on failure
      if: failure() && github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '**CI Failed** - Verifique os erros acima e corrija antes de solicitar review!'
          })
      
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level high
      continue-on-error: true
      
    - name: Check for vulnerabilities
      run: |
        echo "Security check completed"
        echo "Review any HIGH or CRITICAL vulnerabilities above"

  pr-success:
    name: All Checks Passed
    runs-on: ubuntu-latest
    needs: [test, security]
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Success Comment
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '**Todos os checks passaram!**\n\n**Próximos passos:**\n- Solicite review de um desenvolvedor\n- Aguarde aprovação\n- Faça o merge após aprovação\n\n*Este PR está pronto para review!*'
          })
